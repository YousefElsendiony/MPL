diff --git a/codegen.ml b/codegen.ml
index 2d1f79f..ed957dd 100644
--- a/codegen.ml
+++ b/codegen.ml
@@ -27,18 +27,20 @@ let translate (globals, functions) =
   let the_module = L.create_module context "MicroC" in
 
   (* Get types from the context *)
-  let i32_t      = L.i32_type    context
+  let i32_t      = L.i32_type    context (* 32 bit for integer *)
   and i8_t       = L.i8_type     context
-  and i1_t       = L.i1_type     context
+  and i1_t       = L.i1_type     context (* 1 bit for Bool *)
   and float_t    = L.double_type context
   and void_t     = L.void_type   context in
 
-  (* Return the LLVM type for a MicroC type *)
+  (* Return the LLVM type for a MicroC type. AST to llvm type. *)
   let ltype_of_typ = function
       A.Int   -> i32_t
     | A.Bool  -> i1_t
     | A.Float -> float_t
     | A.Void  -> void_t
+    | A.Char  -> i8_t
+    | A.String -> L.pointer_type i8_t
   in
 
   (* Create a map of global variables after creating each *)
@@ -112,6 +114,8 @@ let translate (globals, functions) =
 	SLiteral i  -> L.const_int i32_t i
       | SBoolLit b  -> L.const_int i1_t (if b then 1 else 0)
       | SFliteral l -> L.const_float_of_string float_t l
+      | SChar_literal c -> L.const_int i8_t (Char.code c)
+      | SString_literal s -> L.build_global_stringptr s "tmp" builder
       | SNoexpr     -> L.const_int i32_t 0
       | SId s       -> L.build_load (lookup s) s builder
       | SAssign (s, e) -> let e' = expr builder e in
@@ -156,7 +160,7 @@ let translate (globals, functions) =
 	    A.Neg when t = A.Float -> L.build_fneg 
 	  | A.Neg                  -> L.build_neg
           | A.Not                  -> L.build_not) e' "tmp" builder
-      | SCall ("print", [e]) | SCall ("printb", [e]) ->
+      | SCall ("print", [e]) | SCall ("printb", [e]) | SCall ("printc", [e]) ->
 	  L.build_call printf_func [| int_format_str ; (expr builder e) |]
 	    "printf" builder
       | SCall ("printbig", [e]) ->
diff --git a/semant.ml b/semant.ml
index 00873a9..170e804 100644
--- a/semant.ml
+++ b/semant.ml
@@ -39,6 +39,8 @@ let check (globals, functions) =
       formals = [(ty, "x")];
       locals = []; body = [] } map
     in List.fold_left add_bind StringMap.empty [ ("print", Int);
+                               ("printc", Char);
+                               ("prints", String);
 			                         ("printb", Bool);
 			                         ("printf", Float);
 			                         ("printbig", Int) ]
@@ -95,8 +97,8 @@ let check (globals, functions) =
         Literal  l -> (Int, SLiteral l)
       | Fliteral l -> (Float, SFliteral l)
       | BoolLit l  -> (Bool, SBoolLit l)
-      | Char_literal c -> (Char, SChar_literal(c))
-      | String_literal s -> (String, SString_literal(s))
+      | Char_literal c -> (Char, SChar_literal c)
+      | String_literal s -> (String, SString_literal s)
       | Noexpr     -> (Void, SNoexpr)
       | Id s       -> (type_of_identifier s, SId s)
       | Assign(var, e) as ex -> 
diff --git a/tests/test-hello.mc b/tests/test-hello.mc
index 36642f1..151bc69 100644
--- a/tests/test-hello.mc
+++ b/tests/test-hello.mc
@@ -3,6 +3,6 @@ int main()
   print(42);
   print(71);
   print(1);
-  print("Hello World!");
+  printc("y");
   return 0;
 }
